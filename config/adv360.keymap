/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tap_key_hold_sticky_layer: tap_key_hold_sticky_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_KEY_HOLD_STICKY_LAYER";
            bindings = <&sl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tap_sticky_key_hold_key: tap_sticky_key_hold_key {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_STICKY_KEY_HOLD_KEY";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tap_unless_interrupted: tap_unless_interrupted {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_UNLESS_INTERRUPTED";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <500>;
        };
    };

    combos {
        compatible = "zmk,combos";

        shortcat {
            bindings = <&kp RG(BACKSPACE)>;
            key-positions = <35 38>;
        };

        back {
            bindings = <&kp RG(LEFT_BRACKET)>;
            key-positions = <41 37>;
        };

        forward {
            bindings = <&kp RG(RIGHT_BRACKET)>;
            key-positions = <43 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3  &kp N4  &kp N5  &tog 1                                                                                      &mo 3              &kp N6  &kp N7  &kp N8     &kp N9   &kp N0         &kp MINUS
&trans     &kp Q      &kp W     &kp E   &kp R   &kp T   &sl 1                                                                                       &sl 2              &kp Y   &kp U   &kp I      &kp O    &kp P          &kp BSLH
&trans     &kp A      &kp S     &kp D   &kp F   &kp G   &kp LG(LC(Q))  &mt LEFT_SHIFT LA(BACKSPACE)  &lt 1 ESCAPE      &mt RCMD ENTER  &lt 1 SPACE  &kp RC(RG(SPACE))  &kp H   &kp J   &kp K      &kp L    &kp SEMICOLON  &kp SQT
&trans     &kp Z      &kp X     &kp C   &kp V   &kp B                                                &kp LCMD          &mt RSHFT TAB                                   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH       &trans
&trans     &kp GRAVE  &kp CAPS  &trans  &trans          &kp LALT       &kp BACKSPACE                 &kp LCTRL         &kp RCTRL       &lt 2 RSHFT  &kp RALT                   &trans  &trans     &trans   &trans         &trans
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1                &kp N2                      &kp N3                          &kp N4                                  &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM      &kp KP_EQUAL    &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q                 &kp W                       &kp E                           &kp R                                   &kp T   &none                                                    &none      &kp Y   &kp KP_N7       &kp UP_ARROW    &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &mt UNDERSCORE MINUS  &mt RIGHT_BRACE LEFT_BRACE  &mt RIGHT_BRACKET LEFT_BRACKET  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z                 &kp X                       &kp C                           &kp V                                   &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1       &kp KP_N2       &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE             &kp CAPS                    &kp LEFT                        &kp RIGHT                                       &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP          &kp DOWN        &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &none   &trans  &trans      &trans  &trans  &none   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
